uniform sampler2D SCREEN_TEXTURE;

const highp float shake_power = 0.05;
const highp float shake_rate = 0.001;
const highp float shake_speed = 10.0;
const highp float shake_block_size = 15.5;
const highp float shake_color_rate = 0.5;

highp float random( highp float seed )
{
	return fract( 543.2543 * sin( dot( vec2( seed, seed ), vec2( 3525.46, -54.3415 ) ) ) );
}

void fragment( )
{
	highp float enable_shift = float(random( trunc( TIME * shake_speed ) ) < shake_rate);

	highp vec2 fixed_uv = UV;
	fixed_uv.x += (random(( trunc( UV.y * shake_block_size ) / shake_block_size ) +	TIME) - 0.5) * shake_power * enable_shift;
	highp vec4 pixel_color = textureLod( SCREEN_TEXTURE, fixed_uv, 0.0 );
	pixel_color.g = mix(pixel_color.g, textureLod( SCREEN_TEXTURE, fixed_uv + vec2( shake_color_rate, 0.0 ), 0.0 ).g, enable_shift);
	pixel_color.b = mix(pixel_color.b, textureLod( SCREEN_TEXTURE, fixed_uv + vec2( -shake_color_rate, 0.0 ), 0.0 ).b, enable_shift);
	COLOR = pixel_color;
}
