using Content.Shared.StationRecords;
using Content.Shared.White.CriminalRecords;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Input;
using Robust.Shared.Utility;

namespace Content.Client.White.CriminalRecords.UI.Controls;

[GenerateTypedNameReferences, Virtual]
public partial class RecordCard : Control
{
    private FormattedMessage _description = new FormattedMessage();
    public bool _canDoEvent = false;

    public Action<string>? OnTextBindDown;

    public RecordCard()
    {
        RobustXamlLoader.Load(this);

        StatusOption.AddItem(Loc.GetString("criminal-status-released"), (int)EnumCriminalRecordType.Released);
        StatusOption.AddItem(Loc.GetString("criminal-status-discharged"), (int)EnumCriminalRecordType.Discharged);
        StatusOption.AddItem(Loc.GetString("criminal-status-parolled"), (int)EnumCriminalRecordType.Parolled);
        StatusOption.AddItem(Loc.GetString("criminal-status-suspected"), (int)EnumCriminalRecordType.Suspected);
        StatusOption.AddItem(Loc.GetString("criminal-status-wanted"), (int)EnumCriminalRecordType.Wanted);
        StatusOption.AddItem(Loc.GetString("criminal-status-incarcerated"), (int)EnumCriminalRecordType.Incarcerated);

        Input.OnKeyBindDown += args =>
        {
            if (args.Function == EngineKeyFunctions.TextSubmit)
            {
                UpdateReasonController();
                args.Handle();
            }
        };

        EditReason.OnPressed += args =>
        {
            UpdateReasonController();
        };
    }

    public void InitializeStatusOption(StationRecordKey key, Dictionary<StationRecordKey, CriminalRecordInfo> cache)
    {
        if (cache != null)
        {
            foreach (var (kkey, info) in cache)
            {
                if (kkey.ID == key.ID)
                {
                    StatusOption.SelectId((int) info.CriminalType);
                    break;
                }
            }
        }
    }

    private void UpdateReasonController()
    {
        if (ReasonWritten.Visible)
        {
            var text = ReasonWritten.GetMessage();
            ReasonWritten.SetMessage("");
            ReasonWritten.Visible = false;
            if (text != null)
            {
                Input.CursorPosition = new TextEdit.CursorPos();
                Input.InsertAtCursor(text);
            }
            InputContainer.Visible = true;
        }
        else
        {
            var text = Rope.Collapse(Input.TextRope);
            OnTextBindDown?.Invoke(text);
            Input.TextRope = Rope.Leaf.Empty;
            Input.CursorPosition = new TextEdit.CursorPos(0, TextEdit.LineBreakBias.Top);
            // close input and open label
            InputContainer.Visible = false;
            // for label
            ReasonWritten.SetMessage(text);
            ReasonWritten.Visible = true;
        }
    }
}
