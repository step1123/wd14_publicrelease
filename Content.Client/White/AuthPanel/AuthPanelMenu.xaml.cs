using Content.Client.UserInterface.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;

namespace Content.Client.White.AuthPanel;

[GenerateTypedNameReferences]
public sealed partial class AuthPanelMenu : FancyWindow
{

    public void OnRedButtonPressed(Action<BaseButton.ButtonEventArgs> func)
    {
        RedButton.OnPressed += func;
    }

    public void OnAccessButtonPressed(Action<BaseButton.ButtonEventArgs> func)
    {
        AccessButton.OnPressed += func;
    }

    public void OnBluespaceWeaponButtonPressed(Action<BaseButton.ButtonEventArgs> func)
    {
        BluespaceWeaponButton.OnPressed += func;
    }

    public void SetCount(Label label,int conf, int maxconf)
    {
        label.Visible = conf != 0;
        label.Text = conf + "/" + maxconf;
    }

    public void SetRedCount(int conf, int maxconf)
    {
        SetCount(RedCount,conf,maxconf);
        RedButton.Disabled = conf >= maxconf;
    }

    public void SetAccessCount(int conf, int maxconf)
    {
        SetCount(AccessCount,conf,maxconf);
        AccessButton.Disabled = conf >= maxconf;
    }

    public void SetWeaponCount(int conf, int maxconf)
    {
        SetCount(BluespaceWeaponCount,conf,maxconf);
        BluespaceWeaponButton.Disabled = conf >= maxconf;
    }
}
